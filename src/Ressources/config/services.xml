<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        <service id="verclam.smart-fetch_event_listerner" class="Verclam\SmartFetchBundle\Event\SmartFetchEventListener">
            <tag name="kernel.event_listener"/>
            <argument type="service" id="verclam.smart-fetcher-entity-fetcher"/>
        </service>

        <service id="verclam.smart-fetch.argument-name-resolver" class="Verclam\SmartFetchBundle\Services\ArgumentNameResolver" autowire="true" public="false" />

        <service id="verclam.smart-fetch.object-manager" class="Verclam\SmartFetchBundle\Fetcher\ObjectManager\SmartFetchObjectManager" autowire="true" public="false" />

        <service id="verclam.smart-fetch.configuration" class="Verclam\SmartFetchBundle\Fetcher\Configuration\Configuration" autowire="true" public="false" />

        <service id="verclam.smart-fetch.node-result-factory" class="Verclam\SmartFetchBundle\Fetcher\ResultsProcessors\NodeResultFactory" autowire="true" public="false" />

        <service id="verclam.smart-fetch.condition-factory" class="Verclam\SmartFetchBundle\Fetcher\Condition\ConditionFactory" autowire="true" public="false" />

        <service id="verclam.smart-fetch.entity-many-to-many-hydrator" class="Verclam\SmartFetchBundle\Fetcher\Hydrator\Entity\ManyToManyHydrator" autowire="true" public="false" />
        <service id="verclam.smart-fetch.entity-one-to-many-hydrator" class="Verclam\SmartFetchBundle\Fetcher\Hydrator\Entity\OneToManyHydrator" autowire="true" public="false" />
        <service id="verclam.smart-fetch.entity-one-to-one-hydrator" class="Verclam\SmartFetchBundle\Fetcher\Hydrator\Entity\OneToOneHydrator" autowire="true" public="false" />
        <service id="verclam.smart-fetch.entity-many-to-one-hydrator" class="Verclam\SmartFetchBundle\Fetcher\Hydrator\Entity\ManyToOneHydrator" autowire="true" public="false" />

        <service id="verclam.smart-fetch.array-collection-hydrator" class="Verclam\SmartFetchBundle\Fetcher\Hydrator\Array\CollectionHydrator" autowire="true" public="false" />
        <service id="verclam.smart-fetch.array-collection-arrays-to-root-hydrator" class="Verclam\SmartFetchBundle\Fetcher\Hydrator\Array\CollectionArraysToRootHydrator" autowire="true" public="false" />
        <service id="verclam.smart-fetch.array-single-array-to-root-hydrator" class="Verclam\SmartFetchBundle\Fetcher\Hydrator\Array\SingleArrayToRootHydrator" autowire="true" public="false" />

        <service id="verclam.smart-fetch.array-root-node-query-builder" class="Verclam\SmartFetchBundle\Fetcher\QueryBuilderGenerators\Array\Generators\RootNodeQueryBuilder" autowire="true" public="false">
            <argument type="service" id="verclam.smart-fetch.object-manager"/>
        </service>

        <service id="verclam.smart-fetch.array-composite-node-query-builder" class="Verclam\SmartFetchBundle\Fetcher\QueryBuilderGenerators\Array\Generators\CompositeNodeQueryBuilder" autowire="true" public="false">
            <argument type="service" id="verclam.smart-fetch.object-manager"/>
        </service>

        <service id="verclam.smart-fetch.entity-root-node-query-builder" class="Verclam\SmartFetchBundle\Fetcher\QueryBuilderGenerators\Entity\Generators\RootNodeQueryBuilder" autowire="true" public="false">
            <argument type="service" id="verclam.smart-fetch.object-manager"/>
        </service>

        <service id="verclam.smart-fetch.entity-composite-node-query-builder" class="Verclam\SmartFetchBundle\Fetcher\QueryBuilderGenerators\Entity\Generators\CompositeNodeQueryBuilder" autowire="true" public="false">
            <argument type="service" id="verclam.smart-fetch.object-manager"/>
        </service>

        <service id="verclam.smart-fetch.array-results-processor" class="Verclam\SmartFetchBundle\Fetcher\ResultsProcessors\Array\ResultsProcessor" autowire="true" public="false" >
            <argument type="iterator">
                <argument type="service" id="verclam.smart-fetch.array-collection-hydrator"/>
                <argument type="service" id="verclam.smart-fetch.array-single-array-to-root-hydrator"/>
                <argument type="service" id="verclam.smart-fetch.array-collection-arrays-to-root-hydrator"/>
            </argument>
        </service>

        <service id="verclam.smart-fetch.entity-results-processor" class="Verclam\SmartFetchBundle\Fetcher\ResultsProcessors\Entity\ResultsProcessor" autowire="true" public="false" >
            <argument type="iterator">
                <argument type="service" id="verclam.smart-fetch.entity-many-to-many-hydrator"/>
                <argument type="service" id="verclam.smart-fetch.entity-one-to-many-hydrator"/>
                <argument type="service" id="verclam.smart-fetch.entity-one-to-one-hydrator"/>
                <argument type="service" id="verclam.smart-fetch.entity-many-to-one-hydrator"/>
            </argument>
        </service>

        <service id="verclam.smart-fetch.node-factory" class="Verclam\SmartFetchBundle\Fetcher\TreeBuilder\NodeFactory" autowire="true" public="false">
            <argument type="service" id="verclam.smart-fetch.condition-factory"/>
        </service>

        <service id="verclam.smart-fetch.component-tree-builder" class="Verclam\SmartFetchBundle\Fetcher\TreeBuilder\SmartFetchTreeBuilder" autowire="true" public="false">
            <argument type="service" id="verclam.smart-fetch.object-manager"/>
            <argument type="service" id="verclam.smart-fetch.node-factory"/>
            <argument type="service" id="verclam.smart-fetch.tree-builder-handler"/>
        </service>

        <service id="verclam.smart-fetch.entity-add-child-select-query-generator" class="Verclam\SmartFetchBundle\Fetcher\QueryBuilderGenerators\Entity\EntityAddChildSelectQueryBuilderGenerator">
            <argument type="service" id="verclam.smart-fetch.configuration"/>
        </service>

        <service id="verclam.smart-fetch.entity-query-generator" class="Verclam\SmartFetchBundle\Fetcher\QueryBuilderGenerators\Entity\EntityQueryBuilderGenerator" autowire="true" public="false" >
            <argument type="service" id="verclam.smart-fetch.entity-add-child-select-query-generator"/>
            <argument type="iterator">
                <argument type="service" id="verclam.smart-fetch.entity-composite-node-query-builder"/>
                <argument type="service" id="verclam.smart-fetch.entity-root-node-query-builder"/>
            </argument>
        </service>

        <service id="verclam.smart-fetch.array-add-child-select-query-generator" class="Verclam\SmartFetchBundle\Fetcher\QueryBuilderGenerators\Array\ArrayAddChildSelectQueryBuilderGenerator">
            <argument type="service" id="verclam.smart-fetch.configuration"/>
        </service>

        <service id="verclam.smart-fetch.array-query-generator" class="Verclam\SmartFetchBundle\Fetcher\QueryBuilderGenerators\Array\ArrayQueryBuilderGenerator" autowire="true" public="false" >
            <argument type="service" id="verclam.smart-fetch.array-add-child-select-query-generator"/>
            <argument type="iterator">
                <argument type="service" id="verclam.smart-fetch.array-composite-node-query-builder"/>
                <argument type="service" id="verclam.smart-fetch.array-root-node-query-builder"/>
            </argument>
        </service>

        <service id="verclam.smart-fetch.entity-visitor" class="Verclam\SmartFetchBundle\Fetcher\Visitor\Entity\EntityVisitor" >
            <argument type="service" id="verclam.smart-fetch.configuration"/>
            <argument type="service" id="verclam.smart-fetch.entity-query-generator"/>
            <argument type="service" id="verclam.smart-fetch.entity-results-processor"/>
            <argument type="service" id="verclam.smart-fetch.node-result-factory"/>
        </service>

        <service id="verclam.smart-fetch.array-visitor" class="Verclam\SmartFetchBundle\Fetcher\Visitor\Array\ArrayVisitor" >
            <argument type="service" id="verclam.smart-fetch.array-query-generator"/>
            <argument type="service" id="verclam.smart-fetch.array-results-processor"/>
            <argument type="service" id="verclam.smart-fetch.node-result-factory"/>
        </service>

        <service id="verclam.smart-fetcher.value-resolver" class="Verclam\SmartFetchBundle\Services\ArgumentResolver" autowire="true" public="false">
            <argument type="service" id="verclam.smart-fetcher-entity-fetcher"/>
        </service>

        <service id="verclam.smart-fetcher-entity-fetcher" class="Verclam\SmartFetchBundle\Services\SmartFetchEntityFetcher" autowire="true" public="false">
            <argument type="service" id="verclam.smart-fetch.configuration"/>
            <argument type="service" id="verclam.smart-fetch.object-manager"/>
            <argument type="service" id="verclam.smart-fetch.component-tree-builder"/>
            <argument type="service" id="verclam.smart-fetch.argument-name-resolver"/>
            <argument type="iterator">
                <argument type="service" id="verclam.smart-fetch.entity-visitor"/>
                <argument type="service" id="verclam.smart-fetch.array-visitor"/>
            </argument>
        </service>

        <service id="verclam.smart-fetch.abstract-tree-builder" class="Verclam\SmartFetchBundle\Fetcher\TreeBuilder\Handlers\AbstractTreeBuilder" autowire="true" public="false" abstract="true">
            <argument type="service" id="verclam.smart-fetch.object-manager"/>
        </service>

        <service id="verclam.smart-fetch.array-tree-builder" class="Verclam\SmartFetchBundle\Fetcher\TreeBuilder\Handlers\ArrayTreeBuilder" autowire="true" public="false" parent="verclam.smart-fetch.abstract-tree-builder"/>
        <service id="verclam.smart-fetch.dto-tree-builder" class="Verclam\SmartFetchBundle\Fetcher\TreeBuilder\Handlers\DTOTreeBuilder" autowire="true" public="false"  parent="verclam.smart-fetch.abstract-tree-builder" />
        <service id="verclam.smart-fetch.entity-tree-builder" class="Verclam\SmartFetchBundle\Fetcher\TreeBuilder\Handlers\EntityTreeBuilder" autowire="true" public="false"  parent="verclam.smart-fetch.abstract-tree-builder"/>

        <service id="verclam.smart-fetch.tree-builder-handler" class="Verclam\SmartFetchBundle\Fetcher\TreeBuilder\Handlers\TreeBuilderHandler">
            <argument type="iterator">
                <argument type="service" id="verclam.smart-fetch.entity-tree-builder"/>
                <argument type="service" id="verclam.smart-fetch.array-tree-builder"/>
                <argument type="service" id="verclam.smart-fetch.dto-tree-builder"/>
            </argument>
        </service>
    </services>
</container>

